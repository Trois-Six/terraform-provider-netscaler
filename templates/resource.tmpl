package resources

import (
        "github.com/hashicorp/terraform/helper/schema"
        "log"
)

func Netscaler{{$.Name|name}}() *schema.Resource {
	return &schema.Resource{
		SchemaVersion: 1,
                Create:        create_{{$.Name}},
                Read:          read_{{$.Name}},
                Update:        update_{{$.Name}},
                Delete:        delete_{{$.Name}},
		Schema: map[string]*schema.Schema{
                        {{if $.Schema.Key.Name -}}
                        "{{$.Schema.Key.Name}}": &schema.Schema{
                                Type:     schema.TypeString,
                                Required: true,
			},
                        {{end -}}
                        {{if $.Schema.State -}}
                        "{{$.Schema.State}}": &schema.Schema{
                                Type:     schema.TypeString,
                                Optional: true,
			},
                        {{end -}}
                        {{ range $key, $value := $.Schema.Fields -}}
                        "{{$key}}": &schema.Schema{
                                {{if ($value|is_array) -}}
                                Type:     schema.TypeSet,
                                Elem:     &schema.Schema{
                                        Type:     schema.{{$value|tf_schema_type}},
                                },
                                {{else -}}
                                Type:     schema.{{$value|tf_schema_type}},
                                {{end -}}
                                Optional: true,
                                Computed: true,
                                ForceNew: {{not (is_in $key $.Schema.Update)}},
			},
                        {{end -}}
		},
	}
}

func create_{{$.Name}}(d *schema.ResourceData, meta interface{}) error {
        log.Printf("[DEBUG]  netscaler-provider: In create_{{$.Name}}")

	return nil
}

func read_{{$.Name}}(d *schema.ResourceData, meta interface{}) error {
        log.Println("[DEBUG] netscaler-provider:  In read_{{$.Name}}")

	return nil
}

func update_{{$.Name}}(d *schema.ResourceData, meta interface{}) error {
        log.Println("[DEBUG] netscaler-provider:  In update_{{$.Name}}")

	return nil
}

func delete_{{$.Name}}(d *schema.ResourceData, meta interface{}) error {
        log.Printf("[DEBUG]  netscaler-provider: In delete_{{$.Name}}")

	return nil
}
